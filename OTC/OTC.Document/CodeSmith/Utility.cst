<%@ CodeTemplate Language="C#" TargetLanguage="C#" Description="Generates a very simple business object." Debug="true" ResponseEncoding="UTF-8"%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%--<%@ Property Name="SourceDatabase" Type="SchemaExplorer.DatabaseSchema" DeepLoad="True" Optional="False" Category="01. Getting Started - Required" Description="Database that the tables views, and stored procedures should be based on. IMPORTANT!!! If SourceTables and SourceViews are left blank, the Entire Database will then be generated." %>
<%@ Property Name="TargetTable" Type="SchemaExplorer.TableSchema" DeepLoad="True" Optional="False" Category="01. Getting Started - Required" Description="Database that the tables views, and stored procedures should be based on. IMPORTANT!!! If SourceTables and SourceViews are left blank, the Entire Database will then be generated." %>
--%>
<%@ Property Name="PrimaryKey" Default=" " Type="System.String" Category="Context" Description="PrimaryKey" %>
<%@ Property Name="PrimaryKeyType" Default=" " Type="System.String" Category="Context" Description="Primary Key" %>
<%@ Property Name="UniqueKey" Default=" " Type="System.String" Category="Context" Description="PrimaryKey" %>
<%@ Property Name="UniqueKeyType" Default=" " Type="System.String" Category="Context" Description="Primary Key" %>
<%@ Property Name="TableCapitalString" Default="Capital" Type="System.String" Category="Context" Description="Table Name" %>

<% PrintHeader(this.CodeTemplate);%>

<script runat="template">	

public void PrintHeader(CodeTemplate codeTemplate)
{
    codeTemplate.Response.WriteLine("//============================================================");
	codeTemplate.Response.WriteLine("// 版权所有：版权所有(C){0} HQL",DateTime.Now.Year);
    codeTemplate.Response.WriteLine("// 内容摘要：");
	codeTemplate.Response.WriteLine("// 完成日期：{0}", DateTime.Now);
	codeTemplate.Response.WriteLine("// 版    本：V1.0");
    codeTemplate.Response.WriteLine("// 作    者：");
    codeTemplate.Response.WriteLine("// 修 改 人：");
	codeTemplate.Response.WriteLine("// 修改时间：");
	codeTemplate.Response.WriteLine("//============================================================");
	codeTemplate.Response.WriteLine();
}
        //命名空间处理
        public string GetSpaceName(string tableName)
        {
            //return "Cms";
            if (tableName.Contains("_"))
            {
                string[] arr = tableName.Split('_');
                tableName= arr[0];
            }
            tableName=ChangeFirstLetterToUpper(tableName);
            return tableName;
        }
        
        //表名处理
        public string GetTableName(string tableName)
        {
            if (tableName.Contains("_"))
            {
                string[] arr = tableName.Split('_');
                
                tableName= arr[1];
            }
            tableName=ChangeFirstLetterToUpper(tableName);
            return tableName;
        }
        public string ChangeFirstLetterToUpper(string strChange)
        {
           try
           {
              string tempFirst = strChange.Substring(0, 1);
              string tempElse = strChange.Substring(1, strChange.Length - 1);
              return (tempFirst.ToUpper() + tempElse);
           }
           catch
           {
               return strChange;
           }
        }
        //字段数据类型名称处理
        public string GetColDatatypeName(string str,bool isCanNull)
        {
            string nullString="";
            if (isCanNull)
            	{
            		 nullString="?";
            	}
            if (str == "datetime")
        	{
        		 return "DateTime"+nullString;
        	}
            else if (str == "int")
        	{
        		 return "int"+nullString;
        	}
             else if (str == "tinyint")
        	{
        		 return "Int16"+nullString;
        	}
             else if (str == "bigint")
        	{
        		 return "Int64"+nullString;
        	}
              else if (str == "float")
        	{
        		 return "float"+nullString;
        	}
              else if (str == "decimal")
        	{
        		 return "decimal"+nullString;
        	}
            else if (str == "nvarchar")
        	{
        		 return "string";
        	}
             else if (str == "varchar")
        	{
        		 return "string";
        	}
             else if (str == "text")
        	{
        		 return "string";
        	}
            else
            	{
            	         return str;
            	}
        }
        
        //忽视哪些列
        public bool CheckCol(string colName)
        {
            if (colName == "Id")
            	{
            		 return true;
            	}
                return false;
        }
        
        //生成哪些表
        public bool CheckTableBySpaceName(string tableName)
        {
//          if (GetSpaceName(tableName)=="Cmd")
//        	{
        		 return true;
//        	}
           
//           return false;
        }
        //生成哪个表
        public bool CheckTable(string tableName)
        {
            if (tableName =="mem_member")
        	{
        		 return true;
        	}
           
            return false;
        }

</script>